#!/usr/bin/env bash

if [ -z "${BASH_VERSION-}" ]; then
    printf '%s\n' 'dotfiles-dev: interpreter is not bash' >&2
    exit 1
fi

if [[ $# -lt 1 ]]; then
    printf '%s\n' 'USAGE: dotfiles-dev shell'
    exit 0
fi

launch_container() {
    local img="$1"
    local tag="$2"
    shift 2

    if ! [ -r ./tests/platforms/${img}.dockerfile ]; then
        printf '%s\n' "dotfiles-dev: unsupported container image '$img'" >&2
        exit 1
    fi

    local uid=$(id -u)
    local gid=$(id -g)
    local u_name=$(id -n -u)
    local g_name=$(id -n -g)

    podman build \
        --build-arg=DOCKER_USER_UID=${uid}      \
        --build-arg=DOCKER_USER_GID=${gid}      \
        --build-arg=DOCKER_USER_NAME=${u_name}  \
        --build-arg=DOCKER_USER_GROUP=${g_name} \
        --build-arg=BASE_IMAGE_VERSION=${tag}   \
        -t dotfiles-dev-${img}-${tag}          \
        -f ./tests/platforms/${img}.dockerfile \
        ${PWD}

    if [ $? -ne 0 ] ; then
        exit 1
    fi

    podman run \
        --rm \
        --user ${uid}:${gid} \
        --userns=keep-id:uid=${uid},gid=${gid} \
        -v "${PWD}:/home/${u_name}/dotfiles:z" \
        -it dotfiles-dev-${img}-${tag} \
        "$@"
}

run_cmd_test() {
    local platform="fedora:latest"

    while [[ $# -gt 0 ]];
    do
        case $1 in
            -p|--platform)
                if [ $# -lt 2 ] || [[ "$2" == -* ]]; then
                    printf '%s\n' "dotfiles-dev: missing mandatory value for option '$1'" >&2
                    exit 1
                fi

                shift
                platform=$1
                ;;
            --platform=*)
                platform=${1#--platform=}
                ;;
            -*)
                printf '%s\n' "dotfiles-dev: unknown option '$1'" >&2
                exit 1
                ;;
            *)
                printf '%s\n' "dotfiles-dev: unknown argument '$1'" >&2
                exit 1
                ;;
        esac

        shift
    done

    IFS=':' read -r base tag <<< "${platform}"
    if [ -z "${tag-}" ]; then
        local tag=latest
    fi

    launch_container "${base}" "${tag}" ./bin/dotfiles doctor
    exit
}

run_cmd_shell() {
    local platform="fedora:latest"

    while [[ $# -gt 0 ]];
    do
        case $1 in
            -p|--platform)
                if [ $# -lt 2 ] || [[ "$2" == -* ]]; then
                    printf '%s\n' "dotfiles-dev: missing mandatory value for option '$1'" >&2
                    exit 1
                fi

                shift
                platform=$1
                ;;
            --platform=*)
                platform=${1#--platform=}
                ;;
            -*)
                printf '%s\n' "dotfiles-dev: unknown option '$1'" >&2
                exit 1
                ;;
            *)
                printf '%s\n' "dotfiles-dev: unknown argument '$1'" >&2
                exit 1
                ;;
        esac

        shift
    done

    IFS=':' read -r base tag <<< "${platform}"
    if [ -z "${tag-}" ]; then
        local tag=latest
    fi

    launch_container "${base}" "${tag}" bash
    exit
}

case $1 in
    shell)
        shift
        run_cmd_shell "$@"
        ;;
    test)
        shift
        run_cmd_test "$@"
        ;;
    *)
        printf '%s\n' 'dotfiles-dev: unknown command ${1}' >&2
        exit 1
        ;;
esac
